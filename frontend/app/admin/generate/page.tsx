'use client'

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Sparkles } from 'lucide-react';
import { toast } from 'react-hot-toast';

export default function GeneratePage() {
  const [topic, setTopic] = useState('');
  const [keywords, setKeywords] = useState('');
  const [category, setCategory] = useState('–ù–æ–≤–æ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–∏');
  const [loading, setLoading] = useState(false);
  const router = useRouter();

  const handleGenerate = async () => {
    if (!topic) {
      toast.error('–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É —Å—Ç–∞—Ç—å–∏');
      return;
    }

    setLoading(true);

    try {
      // 1. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ AI
      const generateResponse = await fetch('/api/admin/generate/news', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          topic,
          keywords: keywords.split(',').map(k => k.trim()).filter(Boolean),
          category,
        }),
      });

      const generatedArticle = await generateResponse.json();

      if (!generateResponse.ok) {
        throw new Error(generatedArticle.error || '–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏');
      }

      // 2. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –ë–î
      const saveResponse = await fetch('/api/admin/news', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          ...generatedArticle,
          published: false,
        }),
      });

      if (!saveResponse.ok) {
        throw new Error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
      }

      const savedArticle = await saveResponse.json();

      toast.success('–°—Ç–∞—Ç—å—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!');
      router.push(`/admin/news/${savedArticle.id}/edit`);

    } catch (error: any) {
      console.error('Error:', error);
      toast.error(error.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="max-w-2xl mx-auto">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Sparkles className="w-6 h-6 text-brand-blue" />
            –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏ —á–µ—Ä–µ–∑ AI
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          <div>
            <Label htmlFor="topic">–¢–µ–º–∞ —Å—Ç–∞—Ç—å–∏ *</Label>
            <Input
              id="topic"
              value={topic}
              onChange={(e) => setTopic(e.target.value)}
              placeholder="–ù–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–æ—Å—Ç–∞–≤–∫–∏ –∏–∑ –ò–Ω–¥–∏–∏"
              className="mt-2"
            />
            <p className="text-xs text-muted-foreground mt-1">
              –û —á–µ–º –±—É–¥–µ—Ç —Å—Ç–∞—Ç—å—è? –ë—É–¥—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã.
            </p>
          </div>

          <div>
            <Label htmlFor="keywords">–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)</Label>
            <Input
              id="keywords"
              value={keywords}
              onChange={(e) => setKeywords(e.target.value)}
              placeholder="–¥–æ—Å—Ç–∞–≤–∫–∞ –∏–∑ –ò–Ω–¥–∏–∏, –≥—Ä—É–∑–æ–ø–µ—Ä–µ–≤–æ–∑–∫–∏, –ª–æ–≥–∏—Å—Ç–∏–∫–∞"
              className="mt-2"
            />
            <p className="text-xs text-muted-foreground mt-1">
              –î–ª—è SEO –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
            </p>
          </div>

          <div>
            <Label htmlFor="category">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</Label>
            <Select value={category} onValueChange={setCategory}>
              <SelectTrigger className="mt-2">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="–ù–æ–≤–æ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–∏">–ù–æ–≤–æ—Å—Ç–∏ –∫–æ–º–ø–∞–Ω–∏–∏</SelectItem>
                <SelectItem value="–ó–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ">–ó–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ</SelectItem>
                <SelectItem value="–ê–∫—Ü–∏–∏">–ê–∫—Ü–∏–∏</SelectItem>
                <SelectItem value="–°—Ç–∞—Ç—å–∏">–°—Ç–∞—Ç—å–∏</SelectItem>
              </SelectContent>
            </Select>
          </div>

          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <h4 className="font-semibold text-sm mb-2 text-blue-900">
              üí° –°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:
            </h4>
            <ul className="text-sm text-blue-800 space-y-1">
              <li>‚Ä¢ –£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ç–µ–º—É, –∞ –Ω–µ –æ–±—â—É—é</li>
              <li>‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ 3-5 –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤</li>
              <li>‚Ä¢ AI —Å–æ–∑–¥–∞—Å—Ç SEO-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç–∞—Ç—å—é</li>
              <li>‚Ä¢ –ü–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–æ–∂–Ω–æ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</li>
            </ul>
          </div>

          <Button
            onClick={handleGenerate}
            disabled={loading || !topic}
            className="w-full !bg-brand-blue"
            size="lg"
          >
            {loading ? (
              <>
                <Sparkles className="w-4 h-4 mr-2 animate-spin" />
                –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ AI...
              </>
            ) : (
              <>
                <Sparkles className="w-4 h-4 mr-2" />
                –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—å—é
              </>
            )}
          </Button>
        </CardContent>
      </Card>
    </div>
  );
}
