import { NextResponse } from 'next/server';
import db from '@/lib/db';

export async function GET() {
  try {
    console.log('üîç Checking database connection...');
    console.log('DATABASE_URL:', process.env.DATABASE_URL ? '‚úÖ Set' : '‚ùå Not set');

    // –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    const testQuery = await db.query('SELECT NOW()');
    console.log('‚úÖ Database connection successful');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    const articlesCheck = await db.query(`
      SELECT COUNT(*) as count FROM articles WHERE status = 'published'
    `);
    console.log('üì∞ Articles:', articlesCheck.rows[0]);

    const casesCheck = await db.query(`
      SELECT COUNT(*) as count FROM case_studies WHERE status = 'published'
    `);
    console.log('üì¶ Cases:', casesCheck.rows[0]);

    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã
    const sampleArticles = await db.query(`
      SELECT id, title, slug FROM articles WHERE status = 'published' LIMIT 3
    `);
    
    const sampleCases = await db.query(`
      SELECT id, title, slug FROM case_studies WHERE status = 'published' LIMIT 3
    `);

    return NextResponse.json({
      status: 'success',
      database: 'connected',
      articles: {
        count: articlesCheck.rows[0]?.count || 0,
        samples: sampleArticles.rows
      },
      cases: {
        count: casesCheck.rows[0]?.count || 0,
        samples: sampleCases.rows
      }
    });

  } catch (error: any) {
    console.error('‚ùå Database error:', error.message);
    return NextResponse.json({
      status: 'error',
      message: error.message,
      stack: error.stack
    }, { status: 500 });
  }
}
